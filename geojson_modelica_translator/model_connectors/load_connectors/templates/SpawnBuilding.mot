within {{project_name}}.Loads.{{model_name}};
model building
  "n-zone EnergyPlus building model based on URBANopt GeoJSON export, with distribution pumps"
  extends Buildings.Experimental.DHC.Loads.BaseClasses.PartialBuilding(
    redeclare package Medium=Buildings.Media.Water,
    final have_eleHea=false,
    final have_eleCoo=false,
    final have_weaBus=false);
  package MediumW=Buildings.Media.Water
    "Source side medium";
  package MediumA=Buildings.Media.Air
    "Load side medium";
  parameter Integer nZon={{data['thermal_zones'] | count}}
    "Number of conditioned thermal zones";
  parameter Integer facSca[nZon]=fill(
    5,
    nZon)
    "Scaling factor to be applied to each extensive quantity";
  parameter Modelica.SIunits.MassFlowRate mLoaCoo_flow_nominal[nZon]
    "Load side mass flow rate at cooling nominal conditions"
    annotation (Dialog(group="Nominal condition"));
  parameter Modelica.SIunits.MassFlowRate mLoaHea_flow_nominal[nZon]
    "Load side mass flow rate at heating nominal conditions"
    annotation (Dialog(group="Nominal condition"));
  parameter Modelica.SIunits.TemperatureDifference delTBuiCoo=5
    "Nominal building supply and return chilled water temperature difference";
  parameter Modelica.SIunits.TemperatureDifference delTDisCoo=9
    "Nominal district supply and return water temperature difference";
  parameter Modelica.SIunits.TemperatureDifference delTBuiHea=8
    "Nominal building supply and return water temperature difference";
  parameter Modelica.SIunits.TemperatureDifference delTDisHea=10
    "Nominal district supply and return water temperature difference";
  parameter Modelica.SIunits.Temperature T_aChiWat_nominal=280.15
    "Supply chilled water nominal temperature";
  parameter Modelica.SIunits.Temperature T_bChiWat_nominal=285.15
    "Return chilled water nominal temperature";
  parameter Modelica.SIunits.Temperature T_aHeaWat_nominal=40+273.15
    "Supply heating water nominal temperature";
  parameter Modelica.SIunits.Temperature T_bHeaWat_nominal=35+273.15
    "Return heating water nominal temperature";
  parameter Modelica.SIunits.HeatFlowRate QHea_flow_nominal[nZon]=fill(
    3000,
    nZon) ./ facSca
    "Design heating heat flow rate (>=0)"
    annotation (Dialog(group="Nominal condition"));
  parameter Modelica.SIunits.HeatFlowRate QCoo_flow_nominal[nZon]=fill(
    -8750,
    nZon) ./ facSca
    "Design cooling heat flow rate (<=0)"
    annotation (Dialog(group="Nominal condition"));
  parameter String idfName="modelica://{{project_name}}/Loads/{{data['load_resources_path']}}/{{data['idf']['filename']}}"
    "Path of the IDF file";
  parameter String weaName="modelica://{{project_name}}/Loads/{{data['load_resources_path']}}/{{data['mos_weather']['filename']}}"
    "Path of the weather file";
  // TODO: Minimum and Maximum TSet: make a function of the outdoor air temperature, type of building,occupancy schedule or woking/idle days?
  {% raw %}Buildings.Controls.OBC.CDL.Continuous.Sources.Constant minTSet[nZon](
    // TODO: Dehardcode
    k=fill(
      20+273.15,
      nZon))
    "Minimum temperature setpoint"
    annotation (Placement(transformation(extent={{-220,60},{-200,80}})));
  Buildings.Controls.OBC.CDL.Continuous.Sources.Constant maxTSet[nZon](
    // TODO: Dehardcode
    k=fill(
      24+273.15,
      nZon))
    "Maximum temperature setpoint"
    annotation (Placement(transformation(extent={{-220,20},{-200,40}})));
  Modelica.Blocks.Sources.Constant qConGai_flow(
    k=0)
    "Convective heat gain"
    annotation (Placement(transformation(extent={{-66,128},{-46,148}})));
  Modelica.Blocks.Sources.Constant qRadGai_flow(
    k=0)
    "Radiative heat gain"
    annotation (Placement(transformation(extent={{-66,168},{-46,188}})));
  Modelica.Blocks.Routing.Multiplex3 multiplex3_1
    annotation (Placement(transformation(extent={{-20,128},{0,148}})));
  Modelica.Blocks.Sources.Constant qLatGai_flow(
    k=0)
    "Latent heat gain"
    annotation (Placement(transformation(extent={{-66,88},{-46,108}})));
  {% endraw %}// TODO: apply a dynamic layout
  {% for zone in data['thermal_zones'] %}Buildings.ThermalZones.EnergyPlus.ThermalZone {{zone['modelica_object_name']}}(
    redeclare package Medium=MediumA,
    nPorts=2,
    zoneName="{{zone['spawn_object_name']}}")
    "Thermal zone"
    {% raw %} annotation (Placement(transformation(extent={{40,-20},{80,20}})));
  {% endraw %}{% endfor %}{% raw %}inner Buildings.ThermalZones.EnergyPlus.Building building(
    idfName=Modelica.Utilities.Files.loadResource(
      idfName),
    weaName=Modelica.Utilities.Files.loadResource(
      weaName),
    showWeatherData=false)
    "Building outer component"
    annotation (Placement(transformation(extent={{40,60},{60,80}})));
  Buildings.Controls.OBC.CDL.Continuous.MultiSum mulSum(
    nin=nZon)
    annotation (Placement(transformation(extent={{260,110},{280,130}})));
  Buildings.Controls.OBC.CDL.Continuous.MultiSum mulSum3(
    nin=2) if have_pum
    annotation (Placement(transformation(extent={{260,70},{280,90}})));
  Buildings.Experimental.DHC.Loads.Examples.BaseClasses.FanCoil4Pipe terUni[nZon](
    each T_aChiWat_nominal=T_aChiWat_nominal,
    each T_bChiWat_nominal=T_bChiWat_nominal,
    redeclare each final package Medium1=MediumW,
    redeclare each final package Medium2=MediumA,
    each fan(
      show_T=true),
    final facSca=facSca,
    final QHea_flow_nominal=QHea_flow_nominal,
    final QCoo_flow_nominal=QCoo_flow_nominal,
    each T_aLoaHea_nominal=293.15,
    dehardcode=297.15,
    dehardcode
    annotation (Placement(transformation(extent={{-140,-2},{-120,20}})));
  Buildings {% endraw %} {% raw %} {% endraw %} {% raw %} {% endraw %} {% raw %} {% endraw %} {% raw %} {% endraw %} {% raw %} {% endraw %} {% raw %} {% endraw %} {% raw %} {% endraw %} {% raw %} {% endraw %} {% raw %} {% endraw %} {% raw %} {% endraw %} //----------------Depending on number of thermal zones-----------------
{% for zone in data['thermal_zones'] %} {% raw %} {% endraw %} {% raw %} {% endraw %} {% raw %} {% endraw %} {% raw %} {% endraw %} {% endfor %} {% raw %} {% endraw %}
